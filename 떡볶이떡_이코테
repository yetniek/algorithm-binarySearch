n,m = map(int, input().split())
# n : 떡볶이의 개수
# m : 손님이 원하는 떡의 길이 (aka. 손떡)

array = list(map(int, input().split()))
# 각 떡볶이들의 길이

start = 0
end = max(array)
# 시작점 : 0 
# 끝점 : 전체 떡 길이 중 가장 긴 떡의 길이

result = 0
# 적어도 m길이의 떡을 얻을 수 있는 mid 값(절단기의 높이)을 저장 할 변수

while start <= end: # 시작점이 꿑점보다 작거나 같은 경우 무한 루프 실행
    total = 0 # 잘린 나머지 떡들의 합(aka. 잘떡합)    
    mid = (start + end)//2 # 중간값
    
    for x in array: # 각 떡볶이 길이들의 요소 하나씩 불러옴
        if x > mid: # 떡볶이 길이가 절단기 높이 보다 크면 (그래야 자를 수 있으니까)
            total += x - mid
            # 떡볶이 길이 - 절단기 높이 = 나머지 떡 
            # 해서 총 합 구함

    if total < m: 
        # 잘떡합이 손떡보다 작을 경우 
        # 절단기의 높이를 낮추어 나머지 떡들의 길이가 길어지도록 해야함
        # (손떡과 값이 가까워지도록)
        end = mid - 1
        # 왼쪽 방향 탐색
        
    else: # 잘떡합이 손떡보다 크거나 같을 경우 
        result = mid
        # 적어도 손님이 원하는 길이의 떡을 가져갈 수 있기 때문에 결과에 저장해두고
        # 절단기의 높이를 높여 나머지 떡들의 길이가 짧아지도록 해야함
        # 계속 반복하여 절단기 높이의 최대값을 찾아줌
        # (손떡과 값이 가까워지도록)
        start = mid + 1
        # 오른쪽 방향 탐색
        
print(result)
# 결과 절단기의 높이 출력
